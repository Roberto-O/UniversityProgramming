/* CSC 120 PA 4
 * Roberto Olivera
 * October 20, 2016
 *
 * Project Description: find out how much time your professors spend in class!
 *
 */

import java.awt.*;
import java.text.*;
import javax.swing.*;

public class MUFrame extends javax.swing.JFrame {

    //private MUPanel muPanel;
    public int sum = 0;
    public int total;
    public String theTotal;
    public String professor;
    public String tempString;
    private Professors teacher;
    private DecimalFormat f = new DecimalFormat("##.00");
 
    
    // constructor method
    public MUFrame() {
        initComponents();
        
    } // end of constructor
    
    // declare other methods here
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawingPanel = new javax.swing.JPanel();
        professorComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        classesField = new javax.swing.JTextField();
        mwfCheckBox = new javax.swing.JCheckBox();
        mwCheckBox = new javax.swing.JCheckBox();
        mwfField = new javax.swing.JTextField();
        mwField = new javax.swing.JTextField();
        trCheckBox = new javax.swing.JCheckBox();
        trField = new javax.swing.JTextField();
        hmwfCheckBox = new javax.swing.JCheckBox();
        hmwfField = new javax.swing.JTextField();
        htrCheckBox = new javax.swing.JCheckBox();
        htrField = new javax.swing.JTextField();
        hrCheckBox = new javax.swing.JCheckBox();
        hrField = new javax.swing.JTextField();
        dataButton = new javax.swing.JButton();
        totalButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        professorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cindric", "Kirchmeyer", "Klayder", "Weber", "Smith" }));
        professorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professorComboBoxActionPerformed(evt);
            }
        });

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane2.setViewportView(outputArea);

        jLabel1.setText("Enter total amount of classes they teach this school year: ");

        classesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesFieldActionPerformed(evt);
            }
        });

        mwfCheckBox.setText("MWF");
        mwfCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mwfCheckBoxActionPerformed(evt);
            }
        });

        mwCheckBox.setText("MW");
        mwCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mwCheckBoxActionPerformed(evt);
            }
        });

        mwfField.setEditable(false);
        mwfField.setEnabled(false);

        mwField.setEditable(false);
        mwField.setEnabled(false);

        trCheckBox.setText("TR");
        trCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trCheckBoxActionPerformed(evt);
            }
        });

        trField.setEditable(false);
        trField.setEnabled(false);

        hmwfCheckBox.setText("halfMWF");
        hmwfCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hmwfCheckBoxActionPerformed(evt);
            }
        });

        hmwfField.setEditable(false);
        hmwfField.setEnabled(false);

        htrCheckBox.setText("halfTR");
        htrCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                htrCheckBoxActionPerformed(evt);
            }
        });

        htrField.setEditable(false);
        htrField.setEnabled(false);

        hrCheckBox.setText("R");
        hrCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrCheckBoxActionPerformed(evt);
            }
        });

        hrField.setEditable(false);
        hrField.setEnabled(false);

        dataButton.setText("Process Data");
        dataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataButtonActionPerformed(evt);
            }
        });

        totalButton.setText("View Total Classes Taught");
        totalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classesField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingPanelLayout.createSequentialGroup()
                        .addComponent(dataButton)
                        .addGap(45, 45, 45)
                        .addComponent(totalButton)
                        .addGap(164, 164, 164))))
            .addGroup(drawingPanelLayout.createSequentialGroup()
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(professorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(mwfCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mwfField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mwCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mwField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(trCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hrCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hrField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hmwfCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hmwfField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(htrCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(htrField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        drawingPanelLayout.setVerticalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelLayout.createSequentialGroup()
                .addComponent(professorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(classesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mwfCheckBox)
                    .addComponent(mwfField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mwCheckBox)
                    .addComponent(mwField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trCheckBox)
                    .addComponent(trField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hrCheckBox)
                    .addComponent(hrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hmwfCheckBox)
                        .addComponent(hmwfField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(htrCheckBox)
                        .addComponent(htrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataButton)
                    .addComponent(totalButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mwfCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mwfCheckBoxActionPerformed
        if(mwfCheckBox.isSelected()){
            mwfField.setEditable(true);
            mwfField.setEnabled(true);
        }else{
            mwfField.setText("");
            mwfField.setEditable(false);
            mwfField.setEnabled(false);
        }
    }//GEN-LAST:event_mwfCheckBoxActionPerformed

    private void mwCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mwCheckBoxActionPerformed
        if(mwCheckBox.isSelected()){
            mwField.setEditable(true);
            mwField.setEnabled(true);
        }else{
            mwField.setText("");
            mwField.setEditable(false);
            mwField.setEnabled(false);
        }
    }//GEN-LAST:event_mwCheckBoxActionPerformed

    private void trCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trCheckBoxActionPerformed
        if(trCheckBox.isSelected()){
            trField.setEditable(true);
            trField.setEnabled(true);
        }else{
            trField.setText("");
            trField.setEditable(false);
            trField.setEnabled(false);
        }
    }//GEN-LAST:event_trCheckBoxActionPerformed

    private void hmwfCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hmwfCheckBoxActionPerformed
        if(hmwfCheckBox.isSelected()){
            hmwfField.setEditable(true);
            hmwfField.setEnabled(true);
        }else{
            hmwfField.setText("");
            hmwfField.setEditable(false);
            hmwfField.setEnabled(false);
        }
    }//GEN-LAST:event_hmwfCheckBoxActionPerformed

    private void htrCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_htrCheckBoxActionPerformed
        if(htrCheckBox.isSelected()){
            htrField.setEditable(true);
            htrField.setEnabled(true);
        }else{
            htrField.setText("");
            htrField.setEditable(false);
            htrField.setEnabled(false);
        }
    }//GEN-LAST:event_htrCheckBoxActionPerformed

    private void hrCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrCheckBoxActionPerformed
        if(hrCheckBox.isSelected()){
            hrField.setEditable(true);
            hrField.setEnabled(true);
        }else{
            hrField.setText("");
            hrField.setEditable(false);
            hrField.setEnabled(false);
        }
    }//GEN-LAST:event_hrCheckBoxActionPerformed

    private void professorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professorComboBoxActionPerformed
    professor = professorComboBox.getSelectedItem().toString();
        if(professor.equals("Kirchmeyer")){ //if1
            classesField.setText("");
            mwfField.setText("");
            mwField.setText("");
            trField.setText("");
            hmwfField.setText("");
            htrField.setText("");
            hrField.setText("");
            mwfField.setEditable(false);
            mwfField.setEnabled(false);
            mwField.setEditable(false);
            mwField.setEnabled(false);
            trField.setEditable(false);
            trField.setEnabled(false);
            hmwfField.setEditable(false);
            hmwfField.setEnabled(false);
            htrField.setEditable(false);
            htrField.setEnabled(false);
            hrField.setEditable(false);
            hrField.setEnabled(false);
            if(mwfCheckBox.isSelected()){
                mwfCheckBox.setSelected(false);
            }
            if(mwCheckBox.isSelected()){
                mwCheckBox.setSelected(false);
            }
            if(trCheckBox.isSelected()){
                trCheckBox.setSelected(false);
            }
            if(hmwfCheckBox.isSelected()){
                hmwfCheckBox.setSelected(false);
            }
            if(htrCheckBox.isSelected()){
                htrCheckBox.setSelected(false);
            }
            if(hrCheckBox.isSelected()){
                hrCheckBox.setSelected(false);
            }
        }//if1
        if(professor.equals("Klayder")){ //if2
            classesField.setText("");
            mwfField.setText("");
            mwField.setText("");
            trField.setText("");
            hmwfField.setText("");
            htrField.setText("");
            hrField.setText("");
            mwfField.setEditable(false);
            mwfField.setEnabled(false);
            mwField.setEditable(false);
            mwField.setEnabled(false);
            trField.setEditable(false);
            trField.setEnabled(false);
            hmwfField.setEditable(false);
            hmwfField.setEnabled(false);
            htrField.setEditable(false);
            htrField.setEnabled(false);
            hrField.setEditable(false);
            hrField.setEnabled(false);
            if(mwfCheckBox.isSelected()){
                mwfCheckBox.setSelected(false);
            }
            if(mwCheckBox.isSelected()){
                mwCheckBox.setSelected(false);
            }
            if(trCheckBox.isSelected()){
                trCheckBox.setSelected(false);
            }
            if(hmwfCheckBox.isSelected()){
                hmwfCheckBox.setSelected(false);
            }
            if(htrCheckBox.isSelected()){
                htrCheckBox.setSelected(false);
            }
            if(hrCheckBox.isSelected()){
                hrCheckBox.setSelected(false);
            }
        }//if2
        if(professor.equals("Weber")){ //if3
            classesField.setText("");
            mwfField.setText("");
            mwField.setText("");
            trField.setText("");
            hmwfField.setText("");
            htrField.setText("");
            hrField.setText("");
            mwfField.setEditable(false);
            mwfField.setEnabled(false);
            mwField.setEditable(false);
            mwField.setEnabled(false);
            trField.setEditable(false);
            trField.setEnabled(false);
            hmwfField.setEditable(false);
            hmwfField.setEnabled(false);
            htrField.setEditable(false);
            htrField.setEnabled(false);
            hrField.setEditable(false);
            hrField.setEnabled(false);
            if(mwfCheckBox.isSelected()){
                mwfCheckBox.setSelected(false);
            }
            if(mwCheckBox.isSelected()){
                mwCheckBox.setSelected(false);
            }
            if(trCheckBox.isSelected()){
                trCheckBox.setSelected(false);
            }
            if(hmwfCheckBox.isSelected()){
                hmwfCheckBox.setSelected(false);
            }
            if(htrCheckBox.isSelected()){
                htrCheckBox.setSelected(false);
            }
            if(hrCheckBox.isSelected()){
                hrCheckBox.setSelected(false);
            }  
        }//if3
        if(professor.equals("Smith")){ //if4
            classesField.setText("");
            mwfField.setText("");
            mwField.setText("");
            trField.setText("");
            hmwfField.setText("");
            htrField.setText("");
            hrField.setText("");
            mwfField.setEditable(false);
            mwfField.setEnabled(false);
            mwField.setEditable(false);
            mwField.setEnabled(false);
            trField.setEditable(false);
            trField.setEnabled(false);
            hmwfField.setEditable(false);
            hmwfField.setEnabled(false);
            htrField.setEditable(false);
            htrField.setEnabled(false);
            hrField.setEditable(false);
            hrField.setEnabled(false);
            if(mwfCheckBox.isSelected()){
                mwfCheckBox.setSelected(false);
            }
            if(mwCheckBox.isSelected()){
                mwCheckBox.setSelected(false);
            }
            if(trCheckBox.isSelected()){
                trCheckBox.setSelected(false);
            }
            if(hmwfCheckBox.isSelected()){
                hmwfCheckBox.setSelected(false);
            }
            if(htrCheckBox.isSelected()){
                htrCheckBox.setSelected(false);
            }
            if(hrCheckBox.isSelected()){
                hrCheckBox.setSelected(false);
            }  
        }//if4
        if(professor.equals("Cindric")){ //if5
            classesField.setText("");
            mwfField.setText("");
            mwField.setText("");
            trField.setText("");
            hmwfField.setText("");
            htrField.setText("");
            hrField.setText("");
            mwfField.setEditable(false);
            mwfField.setEnabled(false);
            mwField.setEditable(false);
            mwField.setEnabled(false);
            trField.setEditable(false);
            trField.setEnabled(false);
            hmwfField.setEditable(false);
            hmwfField.setEnabled(false);
            htrField.setEditable(false);
            htrField.setEnabled(false);
            hrField.setEditable(false);
            hrField.setEnabled(false);
            if(mwfCheckBox.isSelected()){
                mwfCheckBox.setSelected(false);
            }
            if(mwCheckBox.isSelected()){
                mwCheckBox.setSelected(false);
            }
            if(trCheckBox.isSelected()){
                trCheckBox.setSelected(false);
            }
            if(hmwfCheckBox.isSelected()){
                hmwfCheckBox.setSelected(false);
            }
            if(htrCheckBox.isSelected()){
                htrCheckBox.setSelected(false);
            }
            if(hrCheckBox.isSelected()){
                hrCheckBox.setSelected(false);
            }  
        }//if5
    }//GEN-LAST:event_professorComboBoxActionPerformed

    private void dataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataButtonActionPerformed
        professor = professorComboBox.getSelectedItem().toString(); //gets Professor name
        
        String s1 = classesField.getText(); //gets classes taught
        int classesT;
        if(s1.equals("")){
            classesT = 0;
        }else{
            classesT = Integer.parseInt(s1);
        }
        
        boolean b1, b2, b3, b4, b5, b6; //declare booleans
        
        if(mwfCheckBox.isSelected()){
            b1 = true;
        }else{ b1 = false; }
        
        if(mwCheckBox.isSelected()){
            b2 = true;
        }else{ b2 = false; }
        
        if(trCheckBox.isSelected()){
            b3 = true;
        }else{ b3 = false; }
        
        if(hmwfCheckBox.isSelected()){
            b4 = true;
        }else{ b4 = false; }
        
        if(htrCheckBox.isSelected()){
            b5 = true;
        }else{ b5 = false; }
        
        if(hrCheckBox.isSelected()){
            b6 = true;
        }else{ b6 = false; }
        
        String s2 = mwfField.getText();
        int i1;
        if(s2.equals("")){
            i1 = 0;
        }else{
            i1 = Integer.parseInt(s2);
        }
        
        String s3 = mwField.getText();
        int i2;
        if(s3.equals("")){
            i2 = 0;
        }else{
            i2 = Integer.parseInt(s3);
        }
        
        String s4 = trField.getText();
        int i3;
        if(s4.equals("")){
            i3 = 0;
        }else{
            i3 = Integer.parseInt(s4);
        }
        
        String s5 = hmwfField.getText();
        int i4;
        if(s5.equals("")){
            i4 = 0;
        }else{
            i4 = Integer.parseInt(s5);
        }
        
        String s6 = htrField.getText();
        int i5;
        if(s6.equals("")){
            i5 = 0;
        }else{
            i5 = Integer.parseInt(s6);
        }
        
        String s7 = hrField.getText();
        int i6;
        if(s7.equals("")){
            i6 = 0;
        }else{
            i6 = Integer.parseInt(s7);
        }
        
        int numMWF = 48;
        int numMW = 32;
        int numTR = 32;  
        int numR = 16;
        int numHalfMWF = 24;
        int numHalfTR = 16;
        int minsMWF = 65;
        int minsTR = 100;
        int temp1,temp2,temp3,temp4,temp5,temp6;
        int totalMins;
        double totalHours;
        
        teacher = new Professors(professor, classesT, b1, i1, b2, i2, b3, i3, b4, i4, b5, i5, b6, i6);
        if(teacher.getClassesT() == 0){
            tempString = "Professor " + teacher.getName() + " doesn't teach any classes this school year.\n";
        }else{        
            temp1 = (numMWF * teacher.getCtMWF()) * minsMWF;
            temp2 = (numMW * teacher.getCtMW()) * minsMWF;
            temp3 = (numTR * teacher.getCtTR()) * minsTR;
            temp4 = (numHalfMWF * teacher.getHsMWF()) * minsMWF;
            temp5 = (numHalfTR * teacher.getHsTR()) * minsTR;
            temp6 = (numR * teacher.getHsR()) * minsTR;
            totalMins = temp1 + temp2 + temp3 + temp4 + temp5 + temp6;
            totalHours = (double) totalMins / 60;
            tempString = "Professor " + teacher.getName() + " teaches a total of " + totalMins + " minutes which is equal to " + f.format(totalHours) + " hours.\n";
        }
        outputArea.append(teacher.toString() + tempString 
                + "------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
        sum+=classesT;
    }//GEN-LAST:event_dataButtonActionPerformed

    private void totalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalButtonActionPerformed
        theTotal = classesField.getText();
        total = Integer.parseInt(theTotal);
        //sum+=total;
        JOptionPane.showMessageDialog(null, sum , "Total Classes Taught", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_totalButtonActionPerformed

    private void classesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesFieldActionPerformed
        //empty
    }//GEN-LAST:event_classesFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MUFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField classesField;
    private javax.swing.JButton dataButton;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JCheckBox hmwfCheckBox;
    private javax.swing.JTextField hmwfField;
    private javax.swing.JCheckBox hrCheckBox;
    private javax.swing.JTextField hrField;
    private javax.swing.JCheckBox htrCheckBox;
    private javax.swing.JTextField htrField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox mwCheckBox;
    private javax.swing.JTextField mwField;
    private javax.swing.JCheckBox mwfCheckBox;
    private javax.swing.JTextField mwfField;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JComboBox<String> professorComboBox;
    private javax.swing.JButton totalButton;
    private javax.swing.JCheckBox trCheckBox;
    private javax.swing.JTextField trField;
    // End of variables declaration//GEN-END:variables
}
